name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:ci

      - name: Upload coverage reports
        if: matrix.node-version == '18'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true

  build:
    name: Build Library
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build library
        run: npm run build:prod

      - name: Check build artifacts
        run: |
          ls -la dist/tableng/
          test -f dist/tableng/package.json
          test -f dist/tableng/README.md

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/tableng/
          retention-days: 7

  compatibility:
    name: Angular Compatibility Check
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        angular-version: ['16', '17', '18']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/tableng/

      - name: Test Angular ${{ matrix.angular-version }} compatibility
        run: |
          npm install -g @angular/cli@${{ matrix.angular-version }}
          ng new test-app --routing --style=css --skip-git --package-manager=npm
          cd test-app
          npm install ../dist/tableng
          ng build --configuration production

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript-typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/tableng/

      - name: Check bundle size
        run: |
          cd dist/tableng
          SIZE=$(wc -c < bundles/tableng.umd.min.js)
          echo "Bundle size: $SIZE bytes"
          if [ $SIZE -gt 1048576 ]; then # 1MB limit
            echo "Bundle size exceeds 1MB limit"
            exit 1
          fi

      - name: Analyze dependencies
        run: |
          npm ls --depth=0
          npm run pack
          cd dist/tableng
          tar -tzf tableng-*.tgz | head -20

  publish-check:
    name: Publish Readiness Check
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/tableng/

      - name: Dry run publish
        run: npm run publish:dry-run

      - name: Validate package.json
        run: |
          cd dist/tableng
          npm pkg validate

  all-checks:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, test, build, compatibility, security, performance]
    if: always()
    steps:
      - name: Check if all jobs succeeded
        run: |
          if [[ "${{ needs.lint.result }}" != "success" || 
                "${{ needs.test.result }}" != "success" || 
                "${{ needs.build.result }}" != "success" || 
                "${{ needs.compatibility.result }}" != "success" || 
                "${{ needs.security.result }}" != "success" || 
                "${{ needs.performance.result }}" != "success" ]]; then
            echo "One or more checks failed"
            exit 1
          else
            echo "All checks passed successfully"
          fi
